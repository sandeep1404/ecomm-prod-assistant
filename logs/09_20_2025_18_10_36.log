{"timestamp": "2025-09-20T09:10:37.064096Z", "level": "info", "event": "Running in LOCAL mode: .env loaded"}
{"timestamp": "2025-09-20T09:10:37.064315Z", "level": "info", "event": "Loaded GROQ_API_KEY from individual env var"}
{"timestamp": "2025-09-20T09:10:37.064406Z", "level": "info", "event": "Loaded GOOGLE_API_KEY from individual env var"}
{"keys": {"GROQ_API_KEY": "gsk_79...", "GOOGLE_API_KEY": "AIzaSy..."}, "timestamp": "2025-09-20T09:10:37.064479Z", "level": "info", "event": "API keys loaded"}
{"config_keys": ["astra_db", "embedding_model", "retriever", "llm"], "timestamp": "2025-09-20T09:10:37.066291Z", "level": "info", "event": "YAML config loaded"}
{"timestamp": "2025-09-20T09:10:37.067158Z", "level": "info", "event": "Running in LOCAL mode: .env loaded"}
{"timestamp": "2025-09-20T09:10:37.067270Z", "level": "info", "event": "Loaded GROQ_API_KEY from individual env var"}
{"timestamp": "2025-09-20T09:10:37.067351Z", "level": "info", "event": "Loaded GOOGLE_API_KEY from individual env var"}
{"keys": {"GROQ_API_KEY": "gsk_79...", "GOOGLE_API_KEY": "AIzaSy..."}, "timestamp": "2025-09-20T09:10:37.067420Z", "level": "info", "event": "API keys loaded"}
{"config_keys": ["astra_db", "embedding_model", "retriever", "llm"], "timestamp": "2025-09-20T09:10:37.069001Z", "level": "info", "event": "YAML config loaded"}
{"timestamp": "2025-09-20T09:10:37.071088Z", "level": "info", "event": "Running in LOCAL mode: .env loaded"}
{"timestamp": "2025-09-20T09:10:37.071223Z", "level": "info", "event": "Loaded GROQ_API_KEY from individual env var"}
{"timestamp": "2025-09-20T09:10:37.071293Z", "level": "info", "event": "Loaded GOOGLE_API_KEY from individual env var"}
{"keys": {"GROQ_API_KEY": "gsk_79...", "GOOGLE_API_KEY": "AIzaSy..."}, "timestamp": "2025-09-20T09:10:37.071328Z", "level": "info", "event": "API keys loaded"}
{"config_keys": ["astra_db", "embedding_model", "retriever", "llm"], "timestamp": "2025-09-20T09:10:37.072396Z", "level": "info", "event": "YAML config loaded"}
{"model": "models/text-embedding-004", "timestamp": "2025-09-20T09:10:37.072472Z", "level": "info", "event": "Loading embedding model"}
vector store default init, collection 'ecommercedata'
No valid keyspace found in environment variable.
Detecting API environment 'prod' from supplied endpoint
createCollection('ecommercedata')
HTTP Request: POST https://4003edcc-33f0-4fe3-bdf1-cbca95a2391f-us-east-2.apps.astra.datastax.com/api/json/v1/default_keyspace "HTTP/1.1 200 OK"
finished createCollection('ecommercedata')
{"provider": "google", "model": "gemini-2.0-flash", "timestamp": "2025-09-20T09:10:40.351651Z", "level": "info", "event": "Loading LLM"}
cursor fetching a page: (empty page state) from ecommercedata
HTTP Request: POST https://4003edcc-33f0-4fe3-bdf1-cbca95a2391f-us-east-2.apps.astra.datastax.com/api/json/v1/default_keyspace/ecommercedata "HTTP/1.1 200 OK"
cursor finished fetching a page: (empty page state) from ecommercedata
{"provider": "google", "model": "gemini-2.0-flash", "timestamp": "2025-09-20T09:10:43.400013Z", "level": "info", "event": "Loading LLM"}
cursor fetching a page: (empty page state) from ecommercedata
HTTP Request: POST https://4003edcc-33f0-4fe3-bdf1-cbca95a2391f-us-east-2.apps.astra.datastax.com/api/json/v1/default_keyspace/ecommercedata "HTTP/1.1 200 OK"
cursor finished fetching a page: (empty page state) from ecommercedata
Retrying langchain_google_genai.chat_models._chat_with_retry.<locals>._chat_with_retry in 2.0 seconds as it raised ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.
* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 15
Please retry in 14.554782705s. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 14
}
].
Retrying langchain_google_genai.chat_models._chat_with_retry.<locals>._chat_with_retry in 2.0 seconds as it raised ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.
* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 15
Please retry in 14.554508417s. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 14
}
].
Retrying langchain_google_genai.chat_models._chat_with_retry.<locals>._chat_with_retry in 2.0 seconds as it raised ResourceExhausted: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.
* Quota exceeded for metric: generativelanguage.googleapis.com/generate_content_free_tier_requests, limit: 15
Please retry in 14.552443388s. [violations {
  quota_metric: "generativelanguage.googleapis.com/generate_content_free_tier_requests"
  quota_id: "GenerateRequestsPerMinutePerProjectPerModel-FreeTier"
  quota_dimensions {
    key: "model"
    value: "gemini-2.0-flash"
  }
  quota_dimensions {
    key: "location"
    value: "global"
  }
  quota_value: 15
}
, links {
  description: "Learn more about Gemini API quotas"
  url: "https://ai.google.dev/gemini-api/docs/rate-limits"
}
, retry_delay {
  seconds: 14
}
].
